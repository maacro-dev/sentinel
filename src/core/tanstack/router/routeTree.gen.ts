/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './../../../routes/__root'
import { Route as UnauthorizedRouteImport } from './../../../routes/unauthorized'
import { Route as LoginRouteImport } from './../../../routes/login'
import { Route as Data_collectorRouteImport } from './../../../routes/data_collector'
import { Route as AdminRouteImport } from './../../../routes/admin'
import { Route as ManagerRouteImport } from './../../../routes/_manager'
import { Route as IndexRouteImport } from './../../../routes/index'
import { Route as AdminOverviewRouteImport } from './../../../routes/admin/_overview'
import { Route as AdminOperationsRouteImport } from './../../../routes/admin/_operations'
import { Route as AdminConfigurationRouteImport } from './../../../routes/admin/_configuration'
import { Route as AdminAccessControlRouteImport } from './../../../routes/admin/_accessControl'
import { Route as ManagerFormsRouteImport } from './../../../routes/_manager/forms'
import { Route as ManagerOverviewRouteImport } from './../../../routes/_manager/_overview'
import { Route as ManagerAnalyticsRouteImport } from './../../../routes/_manager/_analytics'
import { Route as AdminOverviewDashboardRouteImport } from './../../../routes/admin/_overview/dashboard'
import { Route as AdminOperationsReportsRouteImport } from './../../../routes/admin/_operations/reports'
import { Route as AdminOperationsMaintenanceRouteImport } from './../../../routes/admin/_operations/maintenance'
import { Route as AdminConfigurationSettingsRouteImport } from './../../../routes/admin/_configuration/settings'
import { Route as AdminAccessControlUserManagementRouteImport } from './../../../routes/admin/_accessControl/user-management'
import { Route as AdminAccessControlSecurityRouteImport } from './../../../routes/admin/_accessControl/security'
import { Route as ManagerFormsOverviewRouteImport } from './../../../routes/_manager/forms/overview'
import { Route as ManagerFormsFormTypeRouteImport } from './../../../routes/_manager/forms/$formType'
import { Route as ManagerOverviewMonitored_fieldsRouteImport } from './../../../routes/_manager/_overview/monitored_fields'
import { Route as ManagerOverviewDashboardRouteImport } from './../../../routes/_manager/_overview/dashboard'
import { Route as ManagerAnalyticsPredictiveRouteImport } from './../../../routes/_manager/_analytics/predictive'
import { Route as ManagerAnalyticsDescriptiveRouteImport } from './../../../routes/_manager/_analytics/descriptive'
import { Route as ManagerAnalyticsComparativeRouteImport } from './../../../routes/_manager/_analytics/comparative'
import { Route as ManagerFormsFormTypeIndexRouteImport } from './../../../routes/_manager/forms/$formType.index'
import { Route as ManagerFormsFormTypeMfidRouteImport } from './../../../routes/_manager/forms/$formType.$mfid'

const UnauthorizedRoute = UnauthorizedRouteImport.update({
  id: '/unauthorized',
  path: '/unauthorized',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const Data_collectorRoute = Data_collectorRouteImport.update({
  id: '/data_collector',
  path: '/data_collector',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const ManagerRoute = ManagerRouteImport.update({
  id: '/_manager',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminOverviewRoute = AdminOverviewRouteImport.update({
  id: '/_overview',
  getParentRoute: () => AdminRoute,
} as any)
const AdminOperationsRoute = AdminOperationsRouteImport.update({
  id: '/_operations',
  getParentRoute: () => AdminRoute,
} as any)
const AdminConfigurationRoute = AdminConfigurationRouteImport.update({
  id: '/_configuration',
  getParentRoute: () => AdminRoute,
} as any)
const AdminAccessControlRoute = AdminAccessControlRouteImport.update({
  id: '/_accessControl',
  getParentRoute: () => AdminRoute,
} as any)
const ManagerFormsRoute = ManagerFormsRouteImport.update({
  id: '/forms',
  path: '/forms',
  getParentRoute: () => ManagerRoute,
} as any)
const ManagerOverviewRoute = ManagerOverviewRouteImport.update({
  id: '/_overview',
  getParentRoute: () => ManagerRoute,
} as any)
const ManagerAnalyticsRoute = ManagerAnalyticsRouteImport.update({
  id: '/_analytics',
  getParentRoute: () => ManagerRoute,
} as any)
const AdminOverviewDashboardRoute = AdminOverviewDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AdminOverviewRoute,
} as any)
const AdminOperationsReportsRoute = AdminOperationsReportsRouteImport.update({
  id: '/reports',
  path: '/reports',
  getParentRoute: () => AdminOperationsRoute,
} as any)
const AdminOperationsMaintenanceRoute =
  AdminOperationsMaintenanceRouteImport.update({
    id: '/maintenance',
    path: '/maintenance',
    getParentRoute: () => AdminOperationsRoute,
  } as any)
const AdminConfigurationSettingsRoute =
  AdminConfigurationSettingsRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AdminConfigurationRoute,
  } as any)
const AdminAccessControlUserManagementRoute =
  AdminAccessControlUserManagementRouteImport.update({
    id: '/user-management',
    path: '/user-management',
    getParentRoute: () => AdminAccessControlRoute,
  } as any)
const AdminAccessControlSecurityRoute =
  AdminAccessControlSecurityRouteImport.update({
    id: '/security',
    path: '/security',
    getParentRoute: () => AdminAccessControlRoute,
  } as any)
const ManagerFormsOverviewRoute = ManagerFormsOverviewRouteImport.update({
  id: '/overview',
  path: '/overview',
  getParentRoute: () => ManagerFormsRoute,
} as any)
const ManagerFormsFormTypeRoute = ManagerFormsFormTypeRouteImport.update({
  id: '/$formType',
  path: '/$formType',
  getParentRoute: () => ManagerFormsRoute,
} as any)
const ManagerOverviewMonitored_fieldsRoute =
  ManagerOverviewMonitored_fieldsRouteImport.update({
    id: '/monitored_fields',
    path: '/monitored_fields',
    getParentRoute: () => ManagerOverviewRoute,
  } as any)
const ManagerOverviewDashboardRoute =
  ManagerOverviewDashboardRouteImport.update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => ManagerOverviewRoute,
  } as any)
const ManagerAnalyticsPredictiveRoute =
  ManagerAnalyticsPredictiveRouteImport.update({
    id: '/predictive',
    path: '/predictive',
    getParentRoute: () => ManagerAnalyticsRoute,
  } as any)
const ManagerAnalyticsDescriptiveRoute =
  ManagerAnalyticsDescriptiveRouteImport.update({
    id: '/descriptive',
    path: '/descriptive',
    getParentRoute: () => ManagerAnalyticsRoute,
  } as any)
const ManagerAnalyticsComparativeRoute =
  ManagerAnalyticsComparativeRouteImport.update({
    id: '/comparative',
    path: '/comparative',
    getParentRoute: () => ManagerAnalyticsRoute,
  } as any)
const ManagerFormsFormTypeIndexRoute =
  ManagerFormsFormTypeIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ManagerFormsFormTypeRoute,
  } as any)
const ManagerFormsFormTypeMfidRoute =
  ManagerFormsFormTypeMfidRouteImport.update({
    id: '/$mfid',
    path: '/$mfid',
    getParentRoute: () => ManagerFormsFormTypeRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminOverviewRouteWithChildren
  '/data_collector': typeof Data_collectorRoute
  '/login': typeof LoginRoute
  '/unauthorized': typeof UnauthorizedRoute
  '/forms': typeof ManagerFormsRouteWithChildren
  '/comparative': typeof ManagerAnalyticsComparativeRoute
  '/descriptive': typeof ManagerAnalyticsDescriptiveRoute
  '/predictive': typeof ManagerAnalyticsPredictiveRoute
  '/dashboard': typeof ManagerOverviewDashboardRoute
  '/monitored_fields': typeof ManagerOverviewMonitored_fieldsRoute
  '/forms/$formType': typeof ManagerFormsFormTypeRouteWithChildren
  '/forms/overview': typeof ManagerFormsOverviewRoute
  '/admin/security': typeof AdminAccessControlSecurityRoute
  '/admin/user-management': typeof AdminAccessControlUserManagementRoute
  '/admin/settings': typeof AdminConfigurationSettingsRoute
  '/admin/maintenance': typeof AdminOperationsMaintenanceRoute
  '/admin/reports': typeof AdminOperationsReportsRoute
  '/admin/dashboard': typeof AdminOverviewDashboardRoute
  '/forms/$formType/$mfid': typeof ManagerFormsFormTypeMfidRoute
  '/forms/$formType/': typeof ManagerFormsFormTypeIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminOverviewRouteWithChildren
  '/data_collector': typeof Data_collectorRoute
  '/login': typeof LoginRoute
  '/unauthorized': typeof UnauthorizedRoute
  '/forms': typeof ManagerFormsRouteWithChildren
  '/comparative': typeof ManagerAnalyticsComparativeRoute
  '/descriptive': typeof ManagerAnalyticsDescriptiveRoute
  '/predictive': typeof ManagerAnalyticsPredictiveRoute
  '/dashboard': typeof ManagerOverviewDashboardRoute
  '/monitored_fields': typeof ManagerOverviewMonitored_fieldsRoute
  '/forms/overview': typeof ManagerFormsOverviewRoute
  '/admin/security': typeof AdminAccessControlSecurityRoute
  '/admin/user-management': typeof AdminAccessControlUserManagementRoute
  '/admin/settings': typeof AdminConfigurationSettingsRoute
  '/admin/maintenance': typeof AdminOperationsMaintenanceRoute
  '/admin/reports': typeof AdminOperationsReportsRoute
  '/admin/dashboard': typeof AdminOverviewDashboardRoute
  '/forms/$formType/$mfid': typeof ManagerFormsFormTypeMfidRoute
  '/forms/$formType': typeof ManagerFormsFormTypeIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_manager': typeof ManagerRouteWithChildren
  '/admin': typeof AdminRouteWithChildren
  '/data_collector': typeof Data_collectorRoute
  '/login': typeof LoginRoute
  '/unauthorized': typeof UnauthorizedRoute
  '/_manager/_analytics': typeof ManagerAnalyticsRouteWithChildren
  '/_manager/_overview': typeof ManagerOverviewRouteWithChildren
  '/_manager/forms': typeof ManagerFormsRouteWithChildren
  '/admin/_accessControl': typeof AdminAccessControlRouteWithChildren
  '/admin/_configuration': typeof AdminConfigurationRouteWithChildren
  '/admin/_operations': typeof AdminOperationsRouteWithChildren
  '/admin/_overview': typeof AdminOverviewRouteWithChildren
  '/_manager/_analytics/comparative': typeof ManagerAnalyticsComparativeRoute
  '/_manager/_analytics/descriptive': typeof ManagerAnalyticsDescriptiveRoute
  '/_manager/_analytics/predictive': typeof ManagerAnalyticsPredictiveRoute
  '/_manager/_overview/dashboard': typeof ManagerOverviewDashboardRoute
  '/_manager/_overview/monitored_fields': typeof ManagerOverviewMonitored_fieldsRoute
  '/_manager/forms/$formType': typeof ManagerFormsFormTypeRouteWithChildren
  '/_manager/forms/overview': typeof ManagerFormsOverviewRoute
  '/admin/_accessControl/security': typeof AdminAccessControlSecurityRoute
  '/admin/_accessControl/user-management': typeof AdminAccessControlUserManagementRoute
  '/admin/_configuration/settings': typeof AdminConfigurationSettingsRoute
  '/admin/_operations/maintenance': typeof AdminOperationsMaintenanceRoute
  '/admin/_operations/reports': typeof AdminOperationsReportsRoute
  '/admin/_overview/dashboard': typeof AdminOverviewDashboardRoute
  '/_manager/forms/$formType/$mfid': typeof ManagerFormsFormTypeMfidRoute
  '/_manager/forms/$formType/': typeof ManagerFormsFormTypeIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/data_collector'
    | '/login'
    | '/unauthorized'
    | '/forms'
    | '/comparative'
    | '/descriptive'
    | '/predictive'
    | '/dashboard'
    | '/monitored_fields'
    | '/forms/$formType'
    | '/forms/overview'
    | '/admin/security'
    | '/admin/user-management'
    | '/admin/settings'
    | '/admin/maintenance'
    | '/admin/reports'
    | '/admin/dashboard'
    | '/forms/$formType/$mfid'
    | '/forms/$formType/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/data_collector'
    | '/login'
    | '/unauthorized'
    | '/forms'
    | '/comparative'
    | '/descriptive'
    | '/predictive'
    | '/dashboard'
    | '/monitored_fields'
    | '/forms/overview'
    | '/admin/security'
    | '/admin/user-management'
    | '/admin/settings'
    | '/admin/maintenance'
    | '/admin/reports'
    | '/admin/dashboard'
    | '/forms/$formType/$mfid'
    | '/forms/$formType'
  id:
    | '__root__'
    | '/'
    | '/_manager'
    | '/admin'
    | '/data_collector'
    | '/login'
    | '/unauthorized'
    | '/_manager/_analytics'
    | '/_manager/_overview'
    | '/_manager/forms'
    | '/admin/_accessControl'
    | '/admin/_configuration'
    | '/admin/_operations'
    | '/admin/_overview'
    | '/_manager/_analytics/comparative'
    | '/_manager/_analytics/descriptive'
    | '/_manager/_analytics/predictive'
    | '/_manager/_overview/dashboard'
    | '/_manager/_overview/monitored_fields'
    | '/_manager/forms/$formType'
    | '/_manager/forms/overview'
    | '/admin/_accessControl/security'
    | '/admin/_accessControl/user-management'
    | '/admin/_configuration/settings'
    | '/admin/_operations/maintenance'
    | '/admin/_operations/reports'
    | '/admin/_overview/dashboard'
    | '/_manager/forms/$formType/$mfid'
    | '/_manager/forms/$formType/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ManagerRoute: typeof ManagerRouteWithChildren
  AdminRoute: typeof AdminRouteWithChildren
  Data_collectorRoute: typeof Data_collectorRoute
  LoginRoute: typeof LoginRoute
  UnauthorizedRoute: typeof UnauthorizedRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/unauthorized': {
      id: '/unauthorized'
      path: '/unauthorized'
      fullPath: '/unauthorized'
      preLoaderRoute: typeof UnauthorizedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/data_collector': {
      id: '/data_collector'
      path: '/data_collector'
      fullPath: '/data_collector'
      preLoaderRoute: typeof Data_collectorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_manager': {
      id: '/_manager'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ManagerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/_overview': {
      id: '/admin/_overview'
      path: ''
      fullPath: '/admin'
      preLoaderRoute: typeof AdminOverviewRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/_operations': {
      id: '/admin/_operations'
      path: ''
      fullPath: '/admin'
      preLoaderRoute: typeof AdminOperationsRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/_configuration': {
      id: '/admin/_configuration'
      path: ''
      fullPath: '/admin'
      preLoaderRoute: typeof AdminConfigurationRouteImport
      parentRoute: typeof AdminRoute
    }
    '/admin/_accessControl': {
      id: '/admin/_accessControl'
      path: ''
      fullPath: '/admin'
      preLoaderRoute: typeof AdminAccessControlRouteImport
      parentRoute: typeof AdminRoute
    }
    '/_manager/forms': {
      id: '/_manager/forms'
      path: '/forms'
      fullPath: '/forms'
      preLoaderRoute: typeof ManagerFormsRouteImport
      parentRoute: typeof ManagerRoute
    }
    '/_manager/_overview': {
      id: '/_manager/_overview'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ManagerOverviewRouteImport
      parentRoute: typeof ManagerRoute
    }
    '/_manager/_analytics': {
      id: '/_manager/_analytics'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ManagerAnalyticsRouteImport
      parentRoute: typeof ManagerRoute
    }
    '/admin/_overview/dashboard': {
      id: '/admin/_overview/dashboard'
      path: '/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminOverviewDashboardRouteImport
      parentRoute: typeof AdminOverviewRoute
    }
    '/admin/_operations/reports': {
      id: '/admin/_operations/reports'
      path: '/reports'
      fullPath: '/admin/reports'
      preLoaderRoute: typeof AdminOperationsReportsRouteImport
      parentRoute: typeof AdminOperationsRoute
    }
    '/admin/_operations/maintenance': {
      id: '/admin/_operations/maintenance'
      path: '/maintenance'
      fullPath: '/admin/maintenance'
      preLoaderRoute: typeof AdminOperationsMaintenanceRouteImport
      parentRoute: typeof AdminOperationsRoute
    }
    '/admin/_configuration/settings': {
      id: '/admin/_configuration/settings'
      path: '/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AdminConfigurationSettingsRouteImport
      parentRoute: typeof AdminConfigurationRoute
    }
    '/admin/_accessControl/user-management': {
      id: '/admin/_accessControl/user-management'
      path: '/user-management'
      fullPath: '/admin/user-management'
      preLoaderRoute: typeof AdminAccessControlUserManagementRouteImport
      parentRoute: typeof AdminAccessControlRoute
    }
    '/admin/_accessControl/security': {
      id: '/admin/_accessControl/security'
      path: '/security'
      fullPath: '/admin/security'
      preLoaderRoute: typeof AdminAccessControlSecurityRouteImport
      parentRoute: typeof AdminAccessControlRoute
    }
    '/_manager/forms/overview': {
      id: '/_manager/forms/overview'
      path: '/overview'
      fullPath: '/forms/overview'
      preLoaderRoute: typeof ManagerFormsOverviewRouteImport
      parentRoute: typeof ManagerFormsRoute
    }
    '/_manager/forms/$formType': {
      id: '/_manager/forms/$formType'
      path: '/$formType'
      fullPath: '/forms/$formType'
      preLoaderRoute: typeof ManagerFormsFormTypeRouteImport
      parentRoute: typeof ManagerFormsRoute
    }
    '/_manager/_overview/monitored_fields': {
      id: '/_manager/_overview/monitored_fields'
      path: '/monitored_fields'
      fullPath: '/monitored_fields'
      preLoaderRoute: typeof ManagerOverviewMonitored_fieldsRouteImport
      parentRoute: typeof ManagerOverviewRoute
    }
    '/_manager/_overview/dashboard': {
      id: '/_manager/_overview/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof ManagerOverviewDashboardRouteImport
      parentRoute: typeof ManagerOverviewRoute
    }
    '/_manager/_analytics/predictive': {
      id: '/_manager/_analytics/predictive'
      path: '/predictive'
      fullPath: '/predictive'
      preLoaderRoute: typeof ManagerAnalyticsPredictiveRouteImport
      parentRoute: typeof ManagerAnalyticsRoute
    }
    '/_manager/_analytics/descriptive': {
      id: '/_manager/_analytics/descriptive'
      path: '/descriptive'
      fullPath: '/descriptive'
      preLoaderRoute: typeof ManagerAnalyticsDescriptiveRouteImport
      parentRoute: typeof ManagerAnalyticsRoute
    }
    '/_manager/_analytics/comparative': {
      id: '/_manager/_analytics/comparative'
      path: '/comparative'
      fullPath: '/comparative'
      preLoaderRoute: typeof ManagerAnalyticsComparativeRouteImport
      parentRoute: typeof ManagerAnalyticsRoute
    }
    '/_manager/forms/$formType/': {
      id: '/_manager/forms/$formType/'
      path: '/'
      fullPath: '/forms/$formType/'
      preLoaderRoute: typeof ManagerFormsFormTypeIndexRouteImport
      parentRoute: typeof ManagerFormsFormTypeRoute
    }
    '/_manager/forms/$formType/$mfid': {
      id: '/_manager/forms/$formType/$mfid'
      path: '/$mfid'
      fullPath: '/forms/$formType/$mfid'
      preLoaderRoute: typeof ManagerFormsFormTypeMfidRouteImport
      parentRoute: typeof ManagerFormsFormTypeRoute
    }
  }
}

interface ManagerAnalyticsRouteChildren {
  ManagerAnalyticsComparativeRoute: typeof ManagerAnalyticsComparativeRoute
  ManagerAnalyticsDescriptiveRoute: typeof ManagerAnalyticsDescriptiveRoute
  ManagerAnalyticsPredictiveRoute: typeof ManagerAnalyticsPredictiveRoute
}

const ManagerAnalyticsRouteChildren: ManagerAnalyticsRouteChildren = {
  ManagerAnalyticsComparativeRoute: ManagerAnalyticsComparativeRoute,
  ManagerAnalyticsDescriptiveRoute: ManagerAnalyticsDescriptiveRoute,
  ManagerAnalyticsPredictiveRoute: ManagerAnalyticsPredictiveRoute,
}

const ManagerAnalyticsRouteWithChildren =
  ManagerAnalyticsRoute._addFileChildren(ManagerAnalyticsRouteChildren)

interface ManagerOverviewRouteChildren {
  ManagerOverviewDashboardRoute: typeof ManagerOverviewDashboardRoute
  ManagerOverviewMonitored_fieldsRoute: typeof ManagerOverviewMonitored_fieldsRoute
}

const ManagerOverviewRouteChildren: ManagerOverviewRouteChildren = {
  ManagerOverviewDashboardRoute: ManagerOverviewDashboardRoute,
  ManagerOverviewMonitored_fieldsRoute: ManagerOverviewMonitored_fieldsRoute,
}

const ManagerOverviewRouteWithChildren = ManagerOverviewRoute._addFileChildren(
  ManagerOverviewRouteChildren,
)

interface ManagerFormsFormTypeRouteChildren {
  ManagerFormsFormTypeMfidRoute: typeof ManagerFormsFormTypeMfidRoute
  ManagerFormsFormTypeIndexRoute: typeof ManagerFormsFormTypeIndexRoute
}

const ManagerFormsFormTypeRouteChildren: ManagerFormsFormTypeRouteChildren = {
  ManagerFormsFormTypeMfidRoute: ManagerFormsFormTypeMfidRoute,
  ManagerFormsFormTypeIndexRoute: ManagerFormsFormTypeIndexRoute,
}

const ManagerFormsFormTypeRouteWithChildren =
  ManagerFormsFormTypeRoute._addFileChildren(ManagerFormsFormTypeRouteChildren)

interface ManagerFormsRouteChildren {
  ManagerFormsFormTypeRoute: typeof ManagerFormsFormTypeRouteWithChildren
  ManagerFormsOverviewRoute: typeof ManagerFormsOverviewRoute
}

const ManagerFormsRouteChildren: ManagerFormsRouteChildren = {
  ManagerFormsFormTypeRoute: ManagerFormsFormTypeRouteWithChildren,
  ManagerFormsOverviewRoute: ManagerFormsOverviewRoute,
}

const ManagerFormsRouteWithChildren = ManagerFormsRoute._addFileChildren(
  ManagerFormsRouteChildren,
)

interface ManagerRouteChildren {
  ManagerAnalyticsRoute: typeof ManagerAnalyticsRouteWithChildren
  ManagerOverviewRoute: typeof ManagerOverviewRouteWithChildren
  ManagerFormsRoute: typeof ManagerFormsRouteWithChildren
}

const ManagerRouteChildren: ManagerRouteChildren = {
  ManagerAnalyticsRoute: ManagerAnalyticsRouteWithChildren,
  ManagerOverviewRoute: ManagerOverviewRouteWithChildren,
  ManagerFormsRoute: ManagerFormsRouteWithChildren,
}

const ManagerRouteWithChildren =
  ManagerRoute._addFileChildren(ManagerRouteChildren)

interface AdminAccessControlRouteChildren {
  AdminAccessControlSecurityRoute: typeof AdminAccessControlSecurityRoute
  AdminAccessControlUserManagementRoute: typeof AdminAccessControlUserManagementRoute
}

const AdminAccessControlRouteChildren: AdminAccessControlRouteChildren = {
  AdminAccessControlSecurityRoute: AdminAccessControlSecurityRoute,
  AdminAccessControlUserManagementRoute: AdminAccessControlUserManagementRoute,
}

const AdminAccessControlRouteWithChildren =
  AdminAccessControlRoute._addFileChildren(AdminAccessControlRouteChildren)

interface AdminConfigurationRouteChildren {
  AdminConfigurationSettingsRoute: typeof AdminConfigurationSettingsRoute
}

const AdminConfigurationRouteChildren: AdminConfigurationRouteChildren = {
  AdminConfigurationSettingsRoute: AdminConfigurationSettingsRoute,
}

const AdminConfigurationRouteWithChildren =
  AdminConfigurationRoute._addFileChildren(AdminConfigurationRouteChildren)

interface AdminOperationsRouteChildren {
  AdminOperationsMaintenanceRoute: typeof AdminOperationsMaintenanceRoute
  AdminOperationsReportsRoute: typeof AdminOperationsReportsRoute
}

const AdminOperationsRouteChildren: AdminOperationsRouteChildren = {
  AdminOperationsMaintenanceRoute: AdminOperationsMaintenanceRoute,
  AdminOperationsReportsRoute: AdminOperationsReportsRoute,
}

const AdminOperationsRouteWithChildren = AdminOperationsRoute._addFileChildren(
  AdminOperationsRouteChildren,
)

interface AdminOverviewRouteChildren {
  AdminOverviewDashboardRoute: typeof AdminOverviewDashboardRoute
}

const AdminOverviewRouteChildren: AdminOverviewRouteChildren = {
  AdminOverviewDashboardRoute: AdminOverviewDashboardRoute,
}

const AdminOverviewRouteWithChildren = AdminOverviewRoute._addFileChildren(
  AdminOverviewRouteChildren,
)

interface AdminRouteChildren {
  AdminAccessControlRoute: typeof AdminAccessControlRouteWithChildren
  AdminConfigurationRoute: typeof AdminConfigurationRouteWithChildren
  AdminOperationsRoute: typeof AdminOperationsRouteWithChildren
  AdminOverviewRoute: typeof AdminOverviewRouteWithChildren
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAccessControlRoute: AdminAccessControlRouteWithChildren,
  AdminConfigurationRoute: AdminConfigurationRouteWithChildren,
  AdminOperationsRoute: AdminOperationsRouteWithChildren,
  AdminOverviewRoute: AdminOverviewRouteWithChildren,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ManagerRoute: ManagerRouteWithChildren,
  AdminRoute: AdminRouteWithChildren,
  Data_collectorRoute: Data_collectorRoute,
  LoginRoute: LoginRoute,
  UnauthorizedRoute: UnauthorizedRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
